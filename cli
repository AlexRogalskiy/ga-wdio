#!/usr/bin/env node

// Settings Globals
process.env.GA_PROJECT_PATH = process.cwd();

const program = require("commander");
const { createÂ } = require("./libraries/create");
const { runner } = require("./libraries/runner");
const { makeRed } = require("./libraries/helpers/colors");

program
	.version("1.0.0")
	.usage('<commands> [options]')
	.description("A Simple Tool that builds a boilerplate for you");

program
	.command('create')
	.description('Creates the boilerplate in the present directory')
	.on('--help', () => {
		console.log('');
		console.log('Examples:');
		console.log('  ./cli create');
	})
	.action(create);

program
	.command('runner')
	.description('Runs the testing scripts with the options / stacks specified')
	.option('-s, --stack <local> <browser-stack> <browser-stack-local>', 'runs your tests on the local system or browser-stack', 'local') 
	.option('-b, --browser <chrome> <firefox>', 'web browser [chrome or firefox]', 'chrome')
	.option('-m, --mode [headless]', 'sets the mode to the run web-browser, this feature is applicable only with local stack', 'head')
	.on('--help', () => {
		console.log('');
		console.log('Examples:');
		console.log('  ./cli runner . \t\t\t\t\t\t\t# Imp Note: This command will set all the default values');
		console.log('  ./cli runner --stack=local --browser=chrome --mode=headless');
		console.log('  ./cli runner --stack=browser-stack --browser=firefox');
	})
	.action(runner);

program
	.parse(process.argv);

if (! process.argv.slice(2).length) {
  program.outputHelp(makeRed);
}
